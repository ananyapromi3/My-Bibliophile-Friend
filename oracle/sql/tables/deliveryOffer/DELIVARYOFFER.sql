/*
 Navicat Premium Data Transfer

 Source Server         : Project
 Source Server Type    : Oracle
 Source Server Version : 190000 (Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production)
 Source Host           : 0.0.0.0:1521
 Source Schema         : PROJECT

 Target Server Type    : Oracle
 Target Server Version : 190000 (Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production)
 File Encoding         : 65001

 Date: 10/09/2023 23:45:10
*/


-- ----------------------------
-- Table structure for DELIVARYOFFER
-- ----------------------------
DROP TABLE "PROJECT"."DELIVARYOFFER";

CREATE TABLE "PROJECT"."DELIVARYOFFER" (
  "EXCHANGEID" NUMBER(10, 0) VISIBLE NOT NULL,
  "DELIVARYMANID" NUMBER(10, 0) VISIBLE,
  "FEE" NUMBER VISIBLE,
  "STATUS" VARCHAR2(50 BYTE) VISIBLE
) LOGGING NOCOMPRESS PCTFREE 10 INITRANS 1 STORAGE (
  INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT
) PARALLEL 1 NOCACHE DISABLE ROW MOVEMENT;

-- ----------------------------
-- Primary Key structure for table DELIVARYOFFER
-- ----------------------------
ALTER TABLE "PROJECT"."DELIVARYOFFER" ADD CONSTRAINT "SYS_C008254" PRIMARY KEY ("EXCHANGEID");

-- ----------------------------
-- Triggers structure for table DELIVARYOFFER
-- ----------------------------
CREATE TRIGGER "PROJECT"."CREATE_NOTI_FOR_DELIVERY_ACC" AFTER
  INSERT ON "PROJECT"."DELIVARYOFFER" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
DECLARE
  EMAIL1 VARCHAR2(100);
  EMAIL2 VARCHAR2(100);
  NAME1  VARCHAR2(500);
  FEE    NUMBER;
  OFFER1 NUMBER;
  OFFER2 NUMBER;
BEGIN
  FEE := ROUND(:NEW.FEE/2, 2);
  SELECT
    OFFERID1 INTO OFFER1
  FROM
    EXCHANGEOFFER
  WHERE
    EXCHANGEID=:NEW.EXCHANGEID;
  SELECT
    OFFERID2 INTO OFFER2
  FROM
    EXCHANGEOFFER
  WHERE
    EXCHANGEID=:NEW.EXCHANGEID;
  EMAIL1 := GET_EMAIL_FROM_OFFERID(OFFER1);
  EMAIL2 := GET_EMAIL_FROM_OFFERID(OFFER2);
  NAME1 := GET_NAME_FROM_EMAILID(GET_EMAIL_FROM_DELIVARYMANID(:NEW.DELIVARYMANID));
  INSERT INTO NOTI VALUES (
    'Delivery man '
    ||NAME1
    ||' has accepted your order #BIB'
    ||:NEW.EXCHANGEID
    ||'. Delivery charge: '
    ||FEE
    ||'tk',
    SYSDATE,
    EMAIL1,
    'UNREAD',
    GET_NEXT_NOTIID()
  );
  INSERT INTO NOTI VALUES (
    'Delivery man '
    ||NAME1
    ||' has accepted your order #BIB'
    ||:NEW.EXCHANGEID
    ||'. Delivery charge: '
    ||FEE
    ||'tk',
    SYSDATE,
    EMAIL2,
    'UNREAD',
    GET_NEXT_NOTIID()
  );
END;
/

CREATE TRIGGER "PROJECT"."CREATE_NOTI_FOR_DELIVERY_COMP" AFTER
  UPDATE OF "STATUS" ON "PROJECT"."DELIVARYOFFER" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW WHEN (NEW.STATUS='Delivered')
DECLARE
  EMAIL1 VARCHAR2(100);
  EMAIL2 VARCHAR2(100);
  NAME1  VARCHAR2(500);
  FEE    NUMBER;
  OFFER1 NUMBER;
  OFFER2 NUMBER;
BEGIN
  FEE := ROUND(:NEW.FEE/2, 2);
  SELECT
    OFFERID1 INTO OFFER1
  FROM
    EXCHANGEOFFER
  WHERE
    EXCHANGEID=:NEW.EXCHANGEID;
  SELECT
    OFFERID2 INTO OFFER2
  FROM
    EXCHANGEOFFER
  WHERE
    EXCHANGEID=:NEW.EXCHANGEID;
  EMAIL1 := GET_EMAIL_FROM_OFFERID(OFFER1);
  EMAIL2 := GET_EMAIL_FROM_OFFERID(OFFER2);
  NAME1 := GET_NAME_FROM_EMAILID(GET_EMAIL_FROM_DELIVARYMANID(:NEW.DELIVARYMANID));
  INSERT INTO NOTI VALUES (
    'Delivery man '
    ||NAME1
    ||' has completed your order #BIB'
    ||:NEW.EXCHANGEID,
    SYSDATE,
    EMAIL1,
    'UNREAD',
    GET_NEXT_NOTIID()
  );
  INSERT INTO NOTI VALUES (
    'Delivery man '
    ||NAME1
    ||' has completed your order #BIB'
    ||:NEW.EXCHANGEID,
    SYSDATE,
    EMAIL2,
    'UNREAD',
    GET_NEXT_NOTIID()
  );
END;
/

-- ----------------------------
-- Foreign Keys structure for table DELIVARYOFFER
-- ----------------------------
ALTER TABLE "PROJECT"."DELIVARYOFFER" ADD CONSTRAINT "SYS_C008255" FOREIGN KEY ("EXCHANGEID") REFERENCES "PROJECT"."EXCHANGEOFFER" ("EXCHANGEID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

ALTER TABLE "PROJECT"."DELIVARYOFFER" ADD CONSTRAINT "SYS_C008256" FOREIGN KEY ("DELIVARYMANID") REFERENCES "PROJECT"."DELIVARYMAN" ("DELIVARYMANID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;