/*
 Navicat Premium Data Transfer

 Source Server         : Project
 Source Server Type    : Oracle
 Source Server Version : 190000 (Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production)
 Source Host           : 0.0.0.0:1521
 Source Schema         : PROJECT

 Target Server Type    : Oracle
 Target Server Version : 190000 (Oracle Database 19c Enterprise Edition Release 19.0.0.0.0 - Production)
 File Encoding         : 65001

 Date: 10/09/2023 23:46:01
*/


-- ----------------------------
-- Table structure for NOTIFICATION1
-- ----------------------------
DROP TABLE "PROJECT"."NOTIFICATION1";

CREATE TABLE "PROJECT"."NOTIFICATION1" (
    "NOTIFICATIONID" NUMBER(10, 0) VISIBLE NOT NULL,
    "EMAILWHOREQUESTED" VARCHAR2(50 BYTE) VISIBLE NOT NULL,
    "OFFERID" NUMBER(10, 0) VISIBLE NOT NULL,
    "STATUS" VARCHAR2(20 BYTE) VISIBLE
) LOGGING NOCOMPRESS PCTFREE 10 INITRANS 1 STORAGE (
    INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT
) PARALLEL 1 NOCACHE DISABLE ROW MOVEMENT;

-- ----------------------------
-- Primary Key structure for table NOTIFICATION1
-- ----------------------------
ALTER TABLE "PROJECT"."NOTIFICATION1" ADD CONSTRAINT "SYS_C008203" PRIMARY KEY ("NOTIFICATIONID");

-- ----------------------------
-- Checks structure for table NOTIFICATION1
-- ----------------------------
ALTER TABLE "PROJECT"."NOTIFICATION1" ADD CONSTRAINT "SYS_C008200" CHECK ("NOTIFICATIONID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

ALTER TABLE "PROJECT"."NOTIFICATION1" ADD CONSTRAINT "SYS_C008201" CHECK ("EMAILWHOREQUESTED" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

ALTER TABLE "PROJECT"."NOTIFICATION1" ADD CONSTRAINT "SYS_C008202" CHECK ("OFFERID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table NOTIFICATION1
-- ----------------------------
CREATE TRIGGER "PROJECT"."ACC_OFFER" AFTER
    INSERT ON "PROJECT"."NOTIFICATION1" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
DECLARE
    STAT VARCHAR2(100);
BEGIN
    SELECT
        STATUS INTO STAT
    FROM
        OFFER
    WHERE
        OFFERID=:NEW.OFFERID;
    IF STAT = 'offered' THEN
        UPDATE OFFER
        SET
            STATUS = 'pending'
        WHERE
            OFFERID=:NEW.OFFERID;
    END IF;
END;
/

CREATE TRIGGER "PROJECT"."DECLINE_OFFER" AFTER
    DELETE ON "PROJECT"."NOTIFICATION1" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
DECLARE
    STAT VARCHAR2(100);
BEGIN
    SELECT
        STATUS INTO STAT
    FROM
        OFFER
    WHERE
        OFFERID=:OLD.OFFERID;
    IF STAT = 'pending' THEN
        UPDATE OFFER
        SET
            STATUS = 'offered'
        WHERE
            OFFERID=:OLD.OFFERID;
    END IF;
END;
/

CREATE TRIGGER "PROJECT"."DECLINE_OFFER_NOTI" AFTER
    DELETE ON "PROJECT"."NOTIFICATION1" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
DECLARE
BEGIN
    INSERT INTO NOTI VALUES (
        GET_NAME_FROM_EMAILID(GET_EMAIL_FROM_OFFERID(:OLD.OFFERID))
        ||' has declined your request for exchanging '
        ||GET_BOOK_NAME_FROM_OFFERID(:OLD.OFFERID),
        SYSDATE,
        :OLD.EMAILWHOREQUESTED,
        'UNREAD',
        GET_NEXT_NOTIID()
    );
END;
/

CREATE TRIGGER "PROJECT"."OFFER_STATUS_CHANGE" AFTER
    INSERT ON "PROJECT"."NOTIFICATION1" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW
DECLARE
    EMAIL1 VARCHAR2( 100 );
    NAME2  VARCHAR2(100);
    BOOK1  VARCHAR2(500);
BEGIN
    EMAIL1 := GET_EMAIL_FROM_OFFERID(:NEW.OFFERID);
    NAME2 := GET_NAME_FROM_EMAILID(:NEW.EMAILWHOREQUESTED);
    BOOK1 := GET_BOOK_NAME_FROM_OFFERID(:NEW.OFFERID);
    INSERT INTO NOTI VALUES (
        NAME2
        ||' wants to accept your offer of exchanging '
        ||BOOK1,
        SYSDATE,
        EMAIL1,
        'UNREAD',
        GET_NEXT_NOTIID()
    );
END;
/

-- ----------------------------
-- Foreign Keys structure for table NOTIFICATION1
-- ----------------------------
ALTER TABLE "PROJECT"."NOTIFICATION1" ADD CONSTRAINT "SYS_C008204" FOREIGN KEY ("OFFERID") REFERENCES "PROJECT"."OFFER" ("OFFERID") ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;